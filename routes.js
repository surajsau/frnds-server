var invalidParamRes = {successful: 'false', error: '1.INP', message: 'Something\'s wrong'};
var unsuccessfulTransactionRes = {successful: 'false', error: '2.FUP', message: 'Something\'s wrong in the back. Please try again later.'};
var successfulTransaction = {successful: 'true', error: null, message: null};

var appRouter = function(app, db) {

	/*
		POST: /v0/updateTrack
		{trackId: "sample", fbId: "sample", to: "to uId"}
	*/
	app.post("/v0/updateTrack", function(req, res){
		if(!req.body.trackId || !req.body.fbId || !req.body.to) {
			res.send(invalidParamRes);
		} else {
			var tracksRef = db.ref("data/tracks");
			tracksRef.child("" + req.body.fbId).update(
				{
					trackId: "" + req.body.trackId,
					to: "" + req.body.to,
					from: ""+ req.body.fbId
				}, function(error){
				if(error)
					res.send(unsuccessfulTransactionRes);
				else
					res.send(successfulTransaction);
			});
		}
	});

	/* 
		POST: /v0/register
		{fbId: "fbId", "name": "user name"}

		{uId: "uid generated by firebase"}
	*/
	app.post("/v0/register", function(req, res){
		if(!req.body.fbId || !req.body.name) {
			res.send(invalidParamRes); 
		} else {
			var tracksRef = db.ref("data/tracks");
			tracksRef.child("" + req.body.fbId).once('value',function(snapshot){
				if(snapshot.val()==null){
					tracksPushRef = tracksRef.child(req.body.fbId);
					tracksPushRef.set({name: "" + req.body.name}, function(error){
						if(error)
							res.send(unsuccessfulTransactionRes);
						else {
							res.send(successfulTransaction);
						}
					});
				}
				else{
					res.send(successfulTransaction);
				}
			});
		}
	});


	/*
		POST: /v0/registerGCM
		{uId: "uId", deviceId: "deviceId"}
	*/
	app.post("/v0/registerGCM", function(req, res){
		if(!req.body.fbId || !req.body.deviceId) {
			res.send(invalidParamRes);
		} else {
			var tracksRef = db.ref("data/tracks");
			tracksRef.child("" + req.body.fbId).update({deviceId: "" + req.body.deviceId}, function(error){
				if(error) {
					res.send(unsuccessfulTransactionRes);
				} else {
					res.send(successfulTransaction);
				}
			});
		}
	});
	/*
		POST: /vo/refreshFbToken
		{fbId: "fbId", fbToken: "fbToken"}
	*/
	app.post("/v0/refreshFbToken",function(req,res){
		if(!req.body.fbId || !req.body.fbToken){
			res.send(invalidParamRes);
		} else {
			var tracksRef = db.ref("data/tracks");
			tracksRef.child("" + req.body.fbId).update({fbToken: "" + req.body.fbToken},function(error){
				if(error)
					res.send(unsuccessfulTransactionRes);
				else
					res.send(successfulTransaction);
			})
		}
	});
	/*
	POST: /vo/
	*/

}

module.exports = appRouter;